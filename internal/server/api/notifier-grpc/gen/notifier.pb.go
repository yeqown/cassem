// Code generated by protoc-gen-go. DO NOT EDIT.
// source: notifier.proto

package notifier

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Format int32

const (
	Format_Invalid Format = 0
	Format_JSON    Format = 1
	Format_TOML    Format = 2
)

var Format_name = map[int32]string{
	0: "Invalid",
	1: "JSON",
	2: "TOML",
}

var Format_value = map[string]int32{
	"Invalid": 0,
	"JSON":    1,
	"TOML":    2,
}

func (x Format) String() string {
	return proto.EnumName(Format_name, int32(x))
}

func (Format) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c0fc606bc4470de, []int{0}
}

type Changes struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Format               Format   `protobuf:"varint,3,opt,name=format,proto3,enum=Format" json:"format,omitempty"`
	Checksum             string   `protobuf:"bytes,4,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Data                 []byte   `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Changes) Reset()         { *m = Changes{} }
func (m *Changes) String() string { return proto.CompactTextString(m) }
func (*Changes) ProtoMessage()    {}
func (*Changes) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c0fc606bc4470de, []int{0}
}

func (m *Changes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Changes.Unmarshal(m, b)
}
func (m *Changes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Changes.Marshal(b, m, deterministic)
}
func (m *Changes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Changes.Merge(m, src)
}
func (m *Changes) XXX_Size() int {
	return xxx_messageInfo_Changes.Size(m)
}
func (m *Changes) XXX_DiscardUnknown() {
	xxx_messageInfo_Changes.DiscardUnknown(m)
}

var xxx_messageInfo_Changes proto.InternalMessageInfo

func (m *Changes) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Changes) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Changes) GetFormat() Format {
	if m != nil {
		return m.Format
	}
	return Format_Invalid
}

func (m *Changes) GetChecksum() string {
	if m != nil {
		return m.Checksum
	}
	return ""
}

func (m *Changes) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type WatchReq struct {
	Watches              []*WatchOption `protobuf:"bytes,1,rep,name=watches,proto3" json:"watches,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *WatchReq) Reset()         { *m = WatchReq{} }
func (m *WatchReq) String() string { return proto.CompactTextString(m) }
func (*WatchReq) ProtoMessage()    {}
func (*WatchReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c0fc606bc4470de, []int{1}
}

func (m *WatchReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchReq.Unmarshal(m, b)
}
func (m *WatchReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchReq.Marshal(b, m, deterministic)
}
func (m *WatchReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchReq.Merge(m, src)
}
func (m *WatchReq) XXX_Size() int {
	return xxx_messageInfo_WatchReq.Size(m)
}
func (m *WatchReq) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchReq.DiscardUnknown(m)
}

var xxx_messageInfo_WatchReq proto.InternalMessageInfo

func (m *WatchReq) GetWatches() []*WatchOption {
	if m != nil {
		return m.Watches
	}
	return nil
}

type WatchOption struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Keys                 []string `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
	Format               Format   `protobuf:"varint,3,opt,name=format,proto3,enum=Format" json:"format,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchOption) Reset()         { *m = WatchOption{} }
func (m *WatchOption) String() string { return proto.CompactTextString(m) }
func (*WatchOption) ProtoMessage()    {}
func (*WatchOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c0fc606bc4470de, []int{2}
}

func (m *WatchOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchOption.Unmarshal(m, b)
}
func (m *WatchOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchOption.Marshal(b, m, deterministic)
}
func (m *WatchOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchOption.Merge(m, src)
}
func (m *WatchOption) XXX_Size() int {
	return xxx_messageInfo_WatchOption.Size(m)
}
func (m *WatchOption) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchOption.DiscardUnknown(m)
}

var xxx_messageInfo_WatchOption proto.InternalMessageInfo

func (m *WatchOption) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *WatchOption) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *WatchOption) GetFormat() Format {
	if m != nil {
		return m.Format
	}
	return Format_Invalid
}

func init() {
	proto.RegisterEnum("Format", Format_name, Format_value)
	proto.RegisterType((*Changes)(nil), "Changes")
	proto.RegisterType((*WatchReq)(nil), "WatchReq")
	proto.RegisterType((*WatchOption)(nil), "WatchOption")
}

func init() { proto.RegisterFile("notifier.proto", fileDescriptor_1c0fc606bc4470de) }

var fileDescriptor_1c0fc606bc4470de = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0x5d, 0x4b, 0xc3, 0x30,
	0x14, 0x86, 0x97, 0xb6, 0xeb, 0xc7, 0xe9, 0x18, 0xe5, 0x5c, 0x85, 0x21, 0x18, 0x7a, 0x21, 0x55,
	0xa1, 0x48, 0xfd, 0x09, 0x82, 0xa0, 0xa8, 0x85, 0x28, 0x78, 0x6b, 0xec, 0x32, 0x5b, 0x6a, 0x3f,
	0x6c, 0xa2, 0xb2, 0xbf, 0xe0, 0xaf, 0x96, 0xc6, 0x55, 0xbd, 0xdb, 0xdd, 0x73, 0x9e, 0x43, 0xe0,
	0x7d, 0x73, 0x60, 0xd9, 0x76, 0xba, 0xda, 0x54, 0x72, 0x48, 0xfb, 0xa1, 0xd3, 0x5d, 0xfc, 0x45,
	0xc0, 0xbb, 0x28, 0x45, 0xfb, 0x22, 0x15, 0x1e, 0x40, 0xd0, 0x8a, 0x46, 0xaa, 0x5e, 0x14, 0x92,
	0x12, 0x46, 0x92, 0x80, 0xff, 0x09, 0x8c, 0xc0, 0xae, 0xe5, 0x96, 0x5a, 0xc6, 0x8f, 0x88, 0x87,
	0xe0, 0x6e, 0xba, 0xa1, 0x11, 0x9a, 0xda, 0x8c, 0x24, 0xcb, 0xcc, 0x4b, 0x2f, 0xcd, 0xc8, 0x77,
	0x1a, 0x57, 0xe0, 0x17, 0xa5, 0x2c, 0x6a, 0xf5, 0xde, 0x50, 0xc7, 0xbc, 0xfb, 0x9d, 0x11, 0xc1,
	0x59, 0x0b, 0x2d, 0xe8, 0x9c, 0x91, 0x64, 0xc1, 0x0d, 0xc7, 0x19, 0xf8, 0x8f, 0x42, 0x17, 0x25,
	0x97, 0x6f, 0x78, 0x04, 0xde, 0xe7, 0xc8, 0x52, 0x51, 0xc2, 0xec, 0x24, 0xcc, 0x16, 0xa9, 0xd9,
	0xe5, 0xbd, 0xae, 0xba, 0x96, 0x4f, 0xcb, 0xf8, 0x09, 0xc2, 0x7f, 0x7e, 0x4f, 0x07, 0x04, 0xa7,
	0x96, 0x5b, 0x45, 0x2d, 0x66, 0x27, 0x01, 0x37, 0xbc, 0xb7, 0xc5, 0xc9, 0x31, 0xb8, 0x3f, 0x06,
	0x43, 0xf0, 0xae, 0xda, 0x0f, 0xf1, 0x5a, 0xad, 0xa3, 0x19, 0xfa, 0xe0, 0x5c, 0xdf, 0xe7, 0x77,
	0x11, 0x19, 0xe9, 0x21, 0xbf, 0xbd, 0x89, 0xac, 0xec, 0x74, 0x0a, 0x3d, 0x20, 0x83, 0xb9, 0xc9,
	0x85, 0x41, 0x3a, 0x75, 0x5a, 0xf9, 0xe9, 0xee, 0xab, 0xe3, 0xd9, 0x19, 0x79, 0x76, 0xcd, 0x05,
	0xce, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x1d, 0x00, 0xc3, 0x95, 0x93, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WatcherClient is the client API for Watcher service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WatcherClient interface {
	// Watch will rev a stream response in client.
	Watch(ctx context.Context, in *WatchReq, opts ...grpc.CallOption) (Watcher_WatchClient, error)
}

type watcherClient struct {
	cc *grpc.ClientConn
}

func NewWatcherClient(cc *grpc.ClientConn) WatcherClient {
	return &watcherClient{cc}
}

func (c *watcherClient) Watch(ctx context.Context, in *WatchReq, opts ...grpc.CallOption) (Watcher_WatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Watcher_serviceDesc.Streams[0], "/watcher/Watch", opts...)
	if err != nil {
		return nil, err
	}
	x := &watcherWatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Watcher_WatchClient interface {
	Recv() (*Changes, error)
	grpc.ClientStream
}

type watcherWatchClient struct {
	grpc.ClientStream
}

func (x *watcherWatchClient) Recv() (*Changes, error) {
	m := new(Changes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// WatcherServer is the server API for Watcher service.
type WatcherServer interface {
	// Watch will rev a stream response in client.
	Watch(*WatchReq, Watcher_WatchServer) error
}

func RegisterWatcherServer(s *grpc.Server, srv WatcherServer) {
	s.RegisterService(&_Watcher_serviceDesc, srv)
}

func _Watcher_Watch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WatcherServer).Watch(m, &watcherWatchServer{stream})
}

type Watcher_WatchServer interface {
	Send(*Changes) error
	grpc.ServerStream
}

type watcherWatchServer struct {
	grpc.ServerStream
}

func (x *watcherWatchServer) Send(m *Changes) error {
	return x.ServerStream.SendMsg(m)
}

var _Watcher_serviceDesc = grpc.ServiceDesc{
	ServiceName: "watcher",
	HandlerType: (*WatcherServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Watch",
			Handler:       _Watcher_Watch_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "notifier.proto",
}
