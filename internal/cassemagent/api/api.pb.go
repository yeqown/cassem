// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	concept "github.com/yeqown/cassem/internal/concept"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetConfigReq struct {
	App                  string   `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Env                  string   `protobuf:"bytes,2,opt,name=env,proto3" json:"env,omitempty"`
	Keys                 []string `protobuf:"bytes,3,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfigReq) Reset()         { *m = GetConfigReq{} }
func (m *GetConfigReq) String() string { return proto.CompactTextString(m) }
func (*GetConfigReq) ProtoMessage()    {}
func (*GetConfigReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *GetConfigReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigReq.Unmarshal(m, b)
}
func (m *GetConfigReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigReq.Marshal(b, m, deterministic)
}
func (m *GetConfigReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigReq.Merge(m, src)
}
func (m *GetConfigReq) XXX_Size() int {
	return xxx_messageInfo_GetConfigReq.Size(m)
}
func (m *GetConfigReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigReq proto.InternalMessageInfo

func (m *GetConfigReq) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *GetConfigReq) GetEnv() string {
	if m != nil {
		return m.Env
	}
	return ""
}

func (m *GetConfigReq) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

type GetConfigResp struct {
	Elems                []*concept.Element `protobuf:"bytes,1,rep,name=elems,proto3" json:"elems,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetConfigResp) Reset()         { *m = GetConfigResp{} }
func (m *GetConfigResp) String() string { return proto.CompactTextString(m) }
func (*GetConfigResp) ProtoMessage()    {}
func (*GetConfigResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *GetConfigResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigResp.Unmarshal(m, b)
}
func (m *GetConfigResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigResp.Marshal(b, m, deterministic)
}
func (m *GetConfigResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigResp.Merge(m, src)
}
func (m *GetConfigResp) XXX_Size() int {
	return xxx_messageInfo_GetConfigResp.Size(m)
}
func (m *GetConfigResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigResp proto.InternalMessageInfo

func (m *GetConfigResp) GetElems() []*concept.Element {
	if m != nil {
		return m.Elems
	}
	return nil
}

type UnregisterReq struct {
	ClientId             string   `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	ClientIp             string   `protobuf:"bytes,2,opt,name=clientIp,proto3" json:"clientIp,omitempty"`
	App                  string   `protobuf:"bytes,3,opt,name=app,proto3" json:"app,omitempty"`
	Env                  string   `protobuf:"bytes,4,opt,name=env,proto3" json:"env,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnregisterReq) Reset()         { *m = UnregisterReq{} }
func (m *UnregisterReq) String() string { return proto.CompactTextString(m) }
func (*UnregisterReq) ProtoMessage()    {}
func (*UnregisterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *UnregisterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnregisterReq.Unmarshal(m, b)
}
func (m *UnregisterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnregisterReq.Marshal(b, m, deterministic)
}
func (m *UnregisterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnregisterReq.Merge(m, src)
}
func (m *UnregisterReq) XXX_Size() int {
	return xxx_messageInfo_UnregisterReq.Size(m)
}
func (m *UnregisterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UnregisterReq.DiscardUnknown(m)
}

var xxx_messageInfo_UnregisterReq proto.InternalMessageInfo

func (m *UnregisterReq) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *UnregisterReq) GetClientIp() string {
	if m != nil {
		return m.ClientIp
	}
	return ""
}

func (m *UnregisterReq) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *UnregisterReq) GetEnv() string {
	if m != nil {
		return m.Env
	}
	return ""
}

type RenewReq struct {
	ClientId             string   `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	App                  string   `protobuf:"bytes,3,opt,name=app,proto3" json:"app,omitempty"`
	Env                  string   `protobuf:"bytes,4,opt,name=env,proto3" json:"env,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenewReq) Reset()         { *m = RenewReq{} }
func (m *RenewReq) String() string { return proto.CompactTextString(m) }
func (*RenewReq) ProtoMessage()    {}
func (*RenewReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *RenewReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenewReq.Unmarshal(m, b)
}
func (m *RenewReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenewReq.Marshal(b, m, deterministic)
}
func (m *RenewReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenewReq.Merge(m, src)
}
func (m *RenewReq) XXX_Size() int {
	return xxx_messageInfo_RenewReq.Size(m)
}
func (m *RenewReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RenewReq.DiscardUnknown(m)
}

var xxx_messageInfo_RenewReq proto.InternalMessageInfo

func (m *RenewReq) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *RenewReq) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *RenewReq) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *RenewReq) GetEnv() string {
	if m != nil {
		return m.Env
	}
	return ""
}

type EmptyResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyResp) Reset()         { *m = EmptyResp{} }
func (m *EmptyResp) String() string { return proto.CompactTextString(m) }
func (*EmptyResp) ProtoMessage()    {}
func (*EmptyResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *EmptyResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyResp.Unmarshal(m, b)
}
func (m *EmptyResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyResp.Marshal(b, m, deterministic)
}
func (m *EmptyResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyResp.Merge(m, src)
}
func (m *EmptyResp) XXX_Size() int {
	return xxx_messageInfo_EmptyResp.Size(m)
}
func (m *EmptyResp) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyResp.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyResp proto.InternalMessageInfo

type RegAndWaitReq struct {
	App                  string   `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Env                  string   `protobuf:"bytes,2,opt,name=env,proto3" json:"env,omitempty"`
	WatchingKeys         []string `protobuf:"bytes,3,rep,name=watchingKeys,proto3" json:"watchingKeys,omitempty"`
	ClientId             string   `protobuf:"bytes,4,opt,name=clientId,proto3" json:"clientId,omitempty"`
	ClientIp             string   `protobuf:"bytes,5,opt,name=clientIp,proto3" json:"clientIp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegAndWaitReq) Reset()         { *m = RegAndWaitReq{} }
func (m *RegAndWaitReq) String() string { return proto.CompactTextString(m) }
func (*RegAndWaitReq) ProtoMessage()    {}
func (*RegAndWaitReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

func (m *RegAndWaitReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegAndWaitReq.Unmarshal(m, b)
}
func (m *RegAndWaitReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegAndWaitReq.Marshal(b, m, deterministic)
}
func (m *RegAndWaitReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegAndWaitReq.Merge(m, src)
}
func (m *RegAndWaitReq) XXX_Size() int {
	return xxx_messageInfo_RegAndWaitReq.Size(m)
}
func (m *RegAndWaitReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RegAndWaitReq.DiscardUnknown(m)
}

var xxx_messageInfo_RegAndWaitReq proto.InternalMessageInfo

func (m *RegAndWaitReq) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *RegAndWaitReq) GetEnv() string {
	if m != nil {
		return m.Env
	}
	return ""
}

func (m *RegAndWaitReq) GetWatchingKeys() []string {
	if m != nil {
		return m.WatchingKeys
	}
	return nil
}

func (m *RegAndWaitReq) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *RegAndWaitReq) GetClientIp() string {
	if m != nil {
		return m.ClientIp
	}
	return ""
}

type WaitResp struct {
	Elem                 *concept.Element `protobuf:"bytes,1,opt,name=elem,proto3" json:"elem,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *WaitResp) Reset()         { *m = WaitResp{} }
func (m *WaitResp) String() string { return proto.CompactTextString(m) }
func (*WaitResp) ProtoMessage()    {}
func (*WaitResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

func (m *WaitResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WaitResp.Unmarshal(m, b)
}
func (m *WaitResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WaitResp.Marshal(b, m, deterministic)
}
func (m *WaitResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WaitResp.Merge(m, src)
}
func (m *WaitResp) XXX_Size() int {
	return xxx_messageInfo_WaitResp.Size(m)
}
func (m *WaitResp) XXX_DiscardUnknown() {
	xxx_messageInfo_WaitResp.DiscardUnknown(m)
}

var xxx_messageInfo_WaitResp proto.InternalMessageInfo

func (m *WaitResp) GetElem() *concept.Element {
	if m != nil {
		return m.Elem
	}
	return nil
}

func init() {
	proto.RegisterType((*GetConfigReq)(nil), "cassem.agent.getConfigReq")
	proto.RegisterType((*GetConfigResp)(nil), "cassem.agent.getConfigResp")
	proto.RegisterType((*UnregisterReq)(nil), "cassem.agent.unregisterReq")
	proto.RegisterType((*RenewReq)(nil), "cassem.agent.renewReq")
	proto.RegisterType((*EmptyResp)(nil), "cassem.agent.emptyResp")
	proto.RegisterType((*RegAndWaitReq)(nil), "cassem.agent.regAndWaitReq")
	proto.RegisterType((*WaitResp)(nil), "cassem.agent.waitResp")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 398 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xcd, 0x6a, 0xdb, 0x40,
	0x10, 0xc7, 0xad, 0xaf, 0x62, 0x8d, 0xed, 0xb6, 0x6c, 0xa1, 0x16, 0xea, 0xc5, 0xec, 0xc9, 0x50,
	0xaa, 0x06, 0xe7, 0x10, 0xc8, 0x21, 0x90, 0x2f, 0x87, 0x24, 0x37, 0x41, 0x08, 0xf8, 0xa6, 0xc8,
	0x13, 0x65, 0xb1, 0xb5, 0xda, 0x68, 0x37, 0x36, 0x7e, 0x8a, 0x3c, 0x41, 0xde, 0x35, 0x48, 0x96,
	0x64, 0xc9, 0x21, 0x8e, 0x6f, 0xbb, 0x33, 0xa3, 0x9d, 0xdf, 0xfc, 0xff, 0x23, 0xb0, 0x03, 0xc1,
	0x3c, 0x91, 0x26, 0x2a, 0x21, 0xdd, 0x30, 0x90, 0x12, 0x63, 0x2f, 0x88, 0x90, 0x2b, 0xf7, 0x57,
	0x98, 0xf0, 0x10, 0x85, 0xfa, 0xaf, 0x56, 0x02, 0xe5, 0xba, 0x84, 0x8e, 0xa1, 0x1b, 0xa1, 0x3a,
	0x4f, 0xf8, 0x23, 0x8b, 0x7c, 0x7c, 0x26, 0x3f, 0xc1, 0x08, 0x84, 0x70, 0xb4, 0x81, 0x36, 0xb4,
	0xfd, 0xec, 0x98, 0x45, 0x90, 0x2f, 0x1c, 0x7d, 0x1d, 0x41, 0xbe, 0x20, 0x04, 0xcc, 0x19, 0xae,
	0xa4, 0x63, 0x0c, 0x8c, 0xa1, 0xed, 0xe7, 0x67, 0x7a, 0x02, 0xbd, 0xda, 0x3b, 0x52, 0x90, 0x7f,
	0x60, 0xe1, 0x1c, 0x63, 0xe9, 0x68, 0x03, 0x63, 0xd8, 0x19, 0xf5, 0xbd, 0x82, 0xa5, 0x80, 0xf0,
	0x2e, 0xe7, 0x18, 0x23, 0x57, 0xfe, 0xba, 0x8a, 0xce, 0xa0, 0xf7, 0xc2, 0x53, 0x8c, 0x98, 0x54,
	0x98, 0x66, 0x20, 0x2e, 0xb4, 0xc3, 0x39, 0x43, 0xae, 0xae, 0xa7, 0x05, 0x4d, 0x75, 0xaf, 0xe5,
	0x44, 0xc1, 0x55, 0xdd, 0xcb, 0x01, 0x8c, 0x0f, 0x03, 0x98, 0xd5, 0x00, 0x74, 0x02, 0xed, 0x14,
	0x39, 0x2e, 0xbf, 0xea, 0xf3, 0x1d, 0x74, 0x56, 0x76, 0xd0, 0xd9, 0x7e, 0x6f, 0x77, 0xc0, 0xc6,
	0x58, 0xa8, 0x55, 0x26, 0x02, 0x7d, 0xd5, 0xa0, 0x97, 0x62, 0x74, 0xca, 0xa7, 0xf7, 0x01, 0x53,
	0xfb, 0xea, 0x4b, 0xa1, 0xbb, 0x0c, 0x54, 0xf8, 0xc4, 0x78, 0x74, 0xbb, 0xd1, 0xb9, 0x11, 0x6b,
	0x60, 0x9b, 0x3b, 0xe4, 0xb1, 0x9a, 0xf2, 0xd0, 0x23, 0x68, 0x2f, 0x73, 0x14, 0x29, 0xc8, 0x5f,
	0x30, 0x33, 0xf1, 0x73, 0x98, 0x1d, 0x0e, 0xe5, 0x45, 0xa3, 0x37, 0x1d, 0xac, 0x7c, 0x8f, 0xc8,
	0x18, 0xec, 0xab, 0xd2, 0x6a, 0xe2, 0x7a, 0xf5, 0x1d, 0xf3, 0xea, 0xbb, 0xe4, 0xfe, 0xf9, 0x34,
	0x27, 0x05, 0x6d, 0x91, 0x0b, 0x80, 0xbb, 0xca, 0x72, 0xb2, 0x55, 0xdc, 0x58, 0x06, 0xb7, 0xdf,
	0x4c, 0x6e, 0x04, 0x6e, 0x91, 0x63, 0xb0, 0xfc, 0xcc, 0x4b, 0xf2, 0xbb, 0x59, 0x53, 0x1a, 0xbc,
	0xeb, 0xdb, 0x1b, 0xf8, 0xe1, 0x17, 0x5d, 0x0a, 0x8b, 0xb6, 0x31, 0x1a, 0xe6, 0xb9, 0x5b, 0x2d,
	0x4a, 0x21, 0x69, 0xeb, 0x40, 0x3b, 0xb3, 0x26, 0x46, 0x20, 0xd8, 0xc3, 0xb7, 0xfc, 0xb7, 0x3a,
	0x7c, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x0b, 0x9c, 0x44, 0x86, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AgentClient is the client API for Agent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AgentClient interface {
	GetConfig(ctx context.Context, in *GetConfigReq, opts ...grpc.CallOption) (*GetConfigResp, error)
	Unregister(ctx context.Context, in *UnregisterReq, opts ...grpc.CallOption) (*EmptyResp, error)
	Renew(ctx context.Context, in *RenewReq, opts ...grpc.CallOption) (*EmptyResp, error)
	RegisterAndWait(ctx context.Context, in *RegAndWaitReq, opts ...grpc.CallOption) (Agent_RegisterAndWaitClient, error)
}

type agentClient struct {
	cc *grpc.ClientConn
}

func NewAgentClient(cc *grpc.ClientConn) AgentClient {
	return &agentClient{cc}
}

func (c *agentClient) GetConfig(ctx context.Context, in *GetConfigReq, opts ...grpc.CallOption) (*GetConfigResp, error) {
	out := new(GetConfigResp)
	err := c.cc.Invoke(ctx, "/cassem.agent.agent/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Unregister(ctx context.Context, in *UnregisterReq, opts ...grpc.CallOption) (*EmptyResp, error) {
	out := new(EmptyResp)
	err := c.cc.Invoke(ctx, "/cassem.agent.agent/Unregister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Renew(ctx context.Context, in *RenewReq, opts ...grpc.CallOption) (*EmptyResp, error) {
	out := new(EmptyResp)
	err := c.cc.Invoke(ctx, "/cassem.agent.agent/Renew", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) RegisterAndWait(ctx context.Context, in *RegAndWaitReq, opts ...grpc.CallOption) (Agent_RegisterAndWaitClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Agent_serviceDesc.Streams[0], "/cassem.agent.agent/RegisterAndWait", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentRegisterAndWaitClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Agent_RegisterAndWaitClient interface {
	Recv() (*WaitResp, error)
	grpc.ClientStream
}

type agentRegisterAndWaitClient struct {
	grpc.ClientStream
}

func (x *agentRegisterAndWaitClient) Recv() (*WaitResp, error) {
	m := new(WaitResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AgentServer is the server API for Agent service.
type AgentServer interface {
	GetConfig(context.Context, *GetConfigReq) (*GetConfigResp, error)
	Unregister(context.Context, *UnregisterReq) (*EmptyResp, error)
	Renew(context.Context, *RenewReq) (*EmptyResp, error)
	RegisterAndWait(*RegAndWaitReq, Agent_RegisterAndWaitServer) error
}

// UnimplementedAgentServer can be embedded to have forward compatible implementations.
type UnimplementedAgentServer struct {
}

func (*UnimplementedAgentServer) GetConfig(ctx context.Context, req *GetConfigReq) (*GetConfigResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfig not implemented")
}
func (*UnimplementedAgentServer) Unregister(ctx context.Context, req *UnregisterReq) (*EmptyResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unregister not implemented")
}
func (*UnimplementedAgentServer) Renew(ctx context.Context, req *RenewReq) (*EmptyResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Renew not implemented")
}
func (*UnimplementedAgentServer) RegisterAndWait(req *RegAndWaitReq, srv Agent_RegisterAndWaitServer) error {
	return status.Errorf(codes.Unimplemented, "method RegisterAndWait not implemented")
}

func RegisterAgentServer(s *grpc.Server, srv AgentServer) {
	s.RegisterService(&_Agent_serviceDesc, srv)
}

func _Agent_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cassem.agent.agent/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).GetConfig(ctx, req.(*GetConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Unregister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnregisterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Unregister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cassem.agent.agent/Unregister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Unregister(ctx, req.(*UnregisterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Renew_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Renew(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cassem.agent.agent/Renew",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Renew(ctx, req.(*RenewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_RegisterAndWait_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RegAndWaitReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AgentServer).RegisterAndWait(m, &agentRegisterAndWaitServer{stream})
}

type Agent_RegisterAndWaitServer interface {
	Send(*WaitResp) error
	grpc.ServerStream
}

type agentRegisterAndWaitServer struct {
	grpc.ServerStream
}

func (x *agentRegisterAndWaitServer) Send(m *WaitResp) error {
	return x.ServerStream.SendMsg(m)
}

var _Agent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cassem.agent.agent",
	HandlerType: (*AgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetConfig",
			Handler:    _Agent_GetConfig_Handler,
		},
		{
			MethodName: "Unregister",
			Handler:    _Agent_Unregister_Handler,
		},
		{
			MethodName: "Renew",
			Handler:    _Agent_Renew_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RegisterAndWait",
			Handler:       _Agent_RegisterAndWait_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}
