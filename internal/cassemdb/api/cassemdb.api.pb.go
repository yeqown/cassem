// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: cassemdb.api.proto

package api

import (
	context "context"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EntityType int32

const (
	EntityType_UNKNOWN EntityType = 0
	EntityType_ELT     EntityType = 1 // element
	EntityType_DIR     EntityType = 2 // directory
)

// Enum value maps for EntityType.
var (
	EntityType_name = map[int32]string{
		0: "UNKNOWN",
		1: "ELT",
		2: "DIR",
	}
	EntityType_value = map[string]int32{
		"UNKNOWN": 0,
		"ELT":     1,
		"DIR":     2,
	}
)

func (x EntityType) Enum() *EntityType {
	p := new(EntityType)
	*p = x
	return p
}

func (x EntityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntityType) Descriptor() protoreflect.EnumDescriptor {
	return file_cassemdb_api_proto_enumTypes[0].Descriptor()
}

func (EntityType) Type() protoreflect.EnumType {
	return &file_cassemdb_api_proto_enumTypes[0]
}

func (x EntityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntityType.Descriptor instead.
func (EntityType) EnumDescriptor() ([]byte, []int) {
	return file_cassemdb_api_proto_rawDescGZIP(), []int{0}
}

type Change_Op int32

const (
	Change_Invalid Change_Op = 0
	Change_Set     Change_Op = 1
	Change_Unset   Change_Op = 2
)

// Enum value maps for Change_Op.
var (
	Change_Op_name = map[int32]string{
		0: "Invalid",
		1: "Set",
		2: "Unset",
	}
	Change_Op_value = map[string]int32{
		"Invalid": 0,
		"Set":     1,
		"Unset":   2,
	}
)

func (x Change_Op) Enum() *Change_Op {
	p := new(Change_Op)
	*p = x
	return p
}

func (x Change_Op) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Change_Op) Descriptor() protoreflect.EnumDescriptor {
	return file_cassemdb_api_proto_enumTypes[1].Descriptor()
}

func (Change_Op) Type() protoreflect.EnumType {
	return &file_cassemdb_api_proto_enumTypes[1]
}

func (x Change_Op) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Change_Op.Descriptor instead.
func (Change_Op) EnumDescriptor() ([]byte, []int) {
	return file_cassemdb_api_proto_rawDescGZIP(), []int{1, 0}
}

type Entity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fingerprint string     `protobuf:"bytes,1,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	Key         string     `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Val         []byte     `protobuf:"bytes,3,opt,name=val,proto3" json:"val,omitempty"`
	CreatedAt   int64      `protobuf:"varint,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt   int64      `protobuf:"varint,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Ttl         int32      `protobuf:"varint,6,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Typ         EntityType `protobuf:"varint,7,opt,name=typ,proto3,enum=cassem.db.EntityType" json:"typ,omitempty"`
	Size        int32      `protobuf:"varint,8,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *Entity) Reset() {
	*x = Entity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cassemdb_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_cassemdb_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entity.ProtoReflect.Descriptor instead.
func (*Entity) Descriptor() ([]byte, []int) {
	return file_cassemdb_api_proto_rawDescGZIP(), []int{0}
}

func (x *Entity) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

func (x *Entity) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Entity) GetVal() []byte {
	if x != nil {
		return x.Val
	}
	return nil
}

func (x *Entity) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Entity) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Entity) GetTtl() int32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *Entity) GetTyp() EntityType {
	if x != nil {
		return x.Typ
	}
	return EntityType_UNKNOWN
}

func (x *Entity) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type Change struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op      Change_Op `protobuf:"varint,1,opt,name=op,proto3,enum=cassem.db.Change_Op" json:"op,omitempty"`
	Key     string    `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Last    *Entity   `protobuf:"bytes,3,opt,name=last,proto3" json:"last,omitempty"`
	Current *Entity   `protobuf:"bytes,4,opt,name=current,proto3" json:"current,omitempty"`
}

func (x *Change) Reset() {
	*x = Change{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cassemdb_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Change) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change) ProtoMessage() {}

func (x *Change) ProtoReflect() protoreflect.Message {
	mi := &file_cassemdb_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change.ProtoReflect.Descriptor instead.
func (*Change) Descriptor() ([]byte, []int) {
	return file_cassemdb_api_proto_rawDescGZIP(), []int{1}
}

func (x *Change) GetOp() Change_Op {
	if x != nil {
		return x.Op
	}
	return Change_Invalid
}

func (x *Change) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Change) GetLast() *Entity {
	if x != nil {
		return x.Last
	}
	return nil
}

func (x *Change) GetCurrent() *Entity {
	if x != nil {
		return x.Current
	}
	return nil
}

type ParentDirectoryChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Change        *Change `protobuf:"bytes,1,opt,name=change,proto3" json:"change,omitempty"`
	SpecificTopic string  `protobuf:"bytes,2,opt,name=specificTopic,proto3" json:"specificTopic,omitempty"`
}

func (x *ParentDirectoryChange) Reset() {
	*x = ParentDirectoryChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cassemdb_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParentDirectoryChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParentDirectoryChange) ProtoMessage() {}

func (x *ParentDirectoryChange) ProtoReflect() protoreflect.Message {
	mi := &file_cassemdb_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParentDirectoryChange.ProtoReflect.Descriptor instead.
func (*ParentDirectoryChange) Descriptor() ([]byte, []int) {
	return file_cassemdb_api_proto_rawDescGZIP(), []int{2}
}

func (x *ParentDirectoryChange) GetChange() *Change {
	if x != nil {
		return x.Change
	}
	return nil
}

func (x *ParentDirectoryChange) GetSpecificTopic() string {
	if x != nil {
		return x.SpecificTopic
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cassemdb_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_cassemdb_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_cassemdb_api_proto_rawDescGZIP(), []int{3}
}

type GetKVReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetKVReq) Reset() {
	*x = GetKVReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cassemdb_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKVReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKVReq) ProtoMessage() {}

func (x *GetKVReq) ProtoReflect() protoreflect.Message {
	mi := &file_cassemdb_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKVReq.ProtoReflect.Descriptor instead.
func (*GetKVReq) Descriptor() ([]byte, []int) {
	return file_cassemdb_api_proto_rawDescGZIP(), []int{4}
}

func (x *GetKVReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetKVResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *Entity `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *GetKVResp) Reset() {
	*x = GetKVResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cassemdb_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKVResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKVResp) ProtoMessage() {}

func (x *GetKVResp) ProtoReflect() protoreflect.Message {
	mi := &file_cassemdb_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKVResp.ProtoReflect.Descriptor instead.
func (*GetKVResp) Descriptor() ([]byte, []int) {
	return file_cassemdb_api_proto_rawDescGZIP(), []int{5}
}

func (x *GetKVResp) GetEntity() *Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

type GetKVsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *GetKVsReq) Reset() {
	*x = GetKVsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cassemdb_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKVsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKVsReq) ProtoMessage() {}

func (x *GetKVsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cassemdb_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKVsReq.ProtoReflect.Descriptor instead.
func (*GetKVsReq) Descriptor() ([]byte, []int) {
	return file_cassemdb_api_proto_rawDescGZIP(), []int{6}
}

func (x *GetKVsReq) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type GetKVsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entities []*Entity `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
}

func (x *GetKVsResp) Reset() {
	*x = GetKVsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cassemdb_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKVsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKVsResp) ProtoMessage() {}

func (x *GetKVsResp) ProtoReflect() protoreflect.Message {
	mi := &file_cassemdb_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKVsResp.ProtoReflect.Descriptor instead.
func (*GetKVsResp) Descriptor() ([]byte, []int) {
	return file_cassemdb_api_proto_rawDescGZIP(), []int{7}
}

func (x *GetKVsResp) GetEntities() []*Entity {
	if x != nil {
		return x.Entities
	}
	return nil
}

type SetKVReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	IsDir bool   `protobuf:"varint,2,opt,name=isDir,proto3" json:"isDir,omitempty"`
	Ttl   int32  `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"` // ttl is Time to Live (n seconds)
	// val's size in [1, 256K] Byte
	Val       []byte `protobuf:"bytes,4,opt,name=val,proto3" json:"val,omitempty"`
	Overwrite bool   `protobuf:"varint,5,opt,name=overwrite,proto3" json:"overwrite,omitempty"`
}

func (x *SetKVReq) Reset() {
	*x = SetKVReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cassemdb_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetKVReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetKVReq) ProtoMessage() {}

func (x *SetKVReq) ProtoReflect() protoreflect.Message {
	mi := &file_cassemdb_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetKVReq.ProtoReflect.Descriptor instead.
func (*SetKVReq) Descriptor() ([]byte, []int) {
	return file_cassemdb_api_proto_rawDescGZIP(), []int{8}
}

func (x *SetKVReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SetKVReq) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

func (x *SetKVReq) GetTtl() int32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *SetKVReq) GetVal() []byte {
	if x != nil {
		return x.Val
	}
	return nil
}

func (x *SetKVReq) GetOverwrite() bool {
	if x != nil {
		return x.Overwrite
	}
	return false
}

type UnsetKVReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	IsDir bool   `protobuf:"varint,2,opt,name=isDir,proto3" json:"isDir,omitempty"`
}

func (x *UnsetKVReq) Reset() {
	*x = UnsetKVReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cassemdb_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsetKVReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsetKVReq) ProtoMessage() {}

func (x *UnsetKVReq) ProtoReflect() protoreflect.Message {
	mi := &file_cassemdb_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsetKVReq.ProtoReflect.Descriptor instead.
func (*UnsetKVReq) Descriptor() ([]byte, []int) {
	return file_cassemdb_api_proto_rawDescGZIP(), []int{9}
}

func (x *UnsetKVReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UnsetKVReq) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

type WatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []string `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *WatchReq) Reset() {
	*x = WatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cassemdb_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchReq) ProtoMessage() {}

func (x *WatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_cassemdb_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchReq.ProtoReflect.Descriptor instead.
func (*WatchReq) Descriptor() ([]byte, []int) {
	return file_cassemdb_api_proto_rawDescGZIP(), []int{10}
}

func (x *WatchReq) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type TtlReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *TtlReq) Reset() {
	*x = TtlReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cassemdb_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TtlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TtlReq) ProtoMessage() {}

func (x *TtlReq) ProtoReflect() protoreflect.Message {
	mi := &file_cassemdb_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TtlReq.ProtoReflect.Descriptor instead.
func (*TtlReq) Descriptor() ([]byte, []int) {
	return file_cassemdb_api_proto_rawDescGZIP(), []int{11}
}

func (x *TtlReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type TtlResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ttl int32 `protobuf:"varint,1,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *TtlResp) Reset() {
	*x = TtlResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cassemdb_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TtlResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TtlResp) ProtoMessage() {}

func (x *TtlResp) ProtoReflect() protoreflect.Message {
	mi := &file_cassemdb_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TtlResp.ProtoReflect.Descriptor instead.
func (*TtlResp) Descriptor() ([]byte, []int) {
	return file_cassemdb_api_proto_rawDescGZIP(), []int{12}
}

func (x *TtlResp) GetTtl() int32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

type ExpireReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ExpireReq) Reset() {
	*x = ExpireReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cassemdb_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpireReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpireReq) ProtoMessage() {}

func (x *ExpireReq) ProtoReflect() protoreflect.Message {
	mi := &file_cassemdb_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpireReq.ProtoReflect.Descriptor instead.
func (*ExpireReq) Descriptor() ([]byte, []int) {
	return file_cassemdb_api_proto_rawDescGZIP(), []int{13}
}

func (x *ExpireReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type RangeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Seek  string `protobuf:"bytes,2,opt,name=seek,proto3" json:"seek,omitempty"`
	Limit int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *RangeReq) Reset() {
	*x = RangeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cassemdb_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RangeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeReq) ProtoMessage() {}

func (x *RangeReq) ProtoReflect() protoreflect.Message {
	mi := &file_cassemdb_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeReq.ProtoReflect.Descriptor instead.
func (*RangeReq) Descriptor() ([]byte, []int) {
	return file_cassemdb_api_proto_rawDescGZIP(), []int{14}
}

func (x *RangeReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RangeReq) GetSeek() string {
	if x != nil {
		return x.Seek
	}
	return ""
}

func (x *RangeReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type RangeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entities    []*Entity `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	HasMore     bool      `protobuf:"varint,2,opt,name=hasMore,proto3" json:"hasMore,omitempty"`
	NextSeekKey string    `protobuf:"bytes,3,opt,name=nextSeekKey,proto3" json:"nextSeekKey,omitempty"`
}

func (x *RangeResp) Reset() {
	*x = RangeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cassemdb_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RangeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeResp) ProtoMessage() {}

func (x *RangeResp) ProtoReflect() protoreflect.Message {
	mi := &file_cassemdb_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeResp.ProtoReflect.Descriptor instead.
func (*RangeResp) Descriptor() ([]byte, []int) {
	return file_cassemdb_api_proto_rawDescGZIP(), []int{15}
}

func (x *RangeResp) GetEntities() []*Entity {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *RangeResp) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *RangeResp) GetNextSeekKey() string {
	if x != nil {
		return x.NextSeekKey
	}
	return ""
}

var File_cassemdb_api_proto protoreflect.FileDescriptor

var file_cassemdb_api_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x64, 0x62, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x2e, 0x64, 0x62, 0x1a,
	0x22, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2d, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xd9, 0x01, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x20,
	0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x76, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74,
	0x74, 0x6c, 0x12, 0x27, 0x0a, 0x03, 0x74, 0x79, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x15, 0x2e, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x2e, 0x64, 0x62, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x03, 0x74, 0x79, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22,
	0xd1, 0x01, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x02, 0x6f, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x2e,
	0x64, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x4f, 0x70, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x1c, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x02,
	0x4a, 0x01, 0x2f, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x2e,
	0x64, 0x62, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x12,
	0x2b, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x2e, 0x64, 0x62, 0x2e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x25, 0x0a, 0x02,
	0x4f, 0x70, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x6e, 0x73, 0x65,
	0x74, 0x10, 0x02, 0x22, 0x68, 0x0a, 0x15, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x06,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x61, 0x73, 0x73, 0x65, 0x6d, 0x2e, 0x64, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x22, 0x07, 0x0a,
	0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x28, 0x0a, 0x08, 0x67, 0x65, 0x74, 0x4b, 0x56, 0x52,
	0x65, 0x71, 0x12, 0x1c, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x02, 0x4a, 0x01, 0x2f, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x22, 0x36, 0x0a, 0x09, 0x67, 0x65, 0x74, 0x4b, 0x56, 0x52, 0x65, 0x73, 0x70, 0x12, 0x29, 0x0a,
	0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x2e, 0x64, 0x62, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x2d, 0x0a, 0x09, 0x67, 0x65, 0x74, 0x4b,
	0x56, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x08, 0x01, 0x10, 0x64, 0x18,
	0x01, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x3b, 0x0a, 0x0a, 0x67, 0x65, 0x74, 0x4b, 0x56,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d,
	0x2e, 0x64, 0x62, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x4b, 0x56, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x02, 0x4a, 0x01, 0x2f, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x73, 0x44, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x69, 0x73, 0x44, 0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x1d, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x7a, 0x06, 0x10, 0x00, 0x18, 0x80, 0x80,
	0x10, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x76, 0x65, 0x72, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6f, 0x76, 0x65, 0x72, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x22, 0x3d, 0x0a, 0x0a, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x4b, 0x56, 0x52,
	0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x02, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x73, 0x44, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73,
	0x44, 0x69, 0x72, 0x22, 0x2c, 0x0a, 0x08, 0x77, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0c, 0xfa,
	0x42, 0x09, 0x92, 0x01, 0x06, 0x08, 0x01, 0x10, 0x14, 0x18, 0x01, 0x52, 0x04, 0x6b, 0x65, 0x79,
	0x73, 0x22, 0x26, 0x0a, 0x06, 0x74, 0x74, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x02, 0x4a, 0x01, 0x2f, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x1b, 0x0a, 0x07, 0x74, 0x74, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x22, 0x29, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x02, 0x4a, 0x01, 0x2f, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x22, 0x66, 0x0a, 0x08, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x02, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0xd0,
	0x01, 0x01, 0x52, 0x04, 0x73, 0x65, 0x65, 0x6b, 0x12, 0x1f, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x64,
	0x28, 0x01, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x76, 0x0a, 0x09, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x61, 0x73, 0x73, 0x65,
	0x6d, 0x2e, 0x64, 0x62, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x65, 0x65, 0x6b, 0x4b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x65, 0x65, 0x6b, 0x4b, 0x65,
	0x79, 0x2a, 0x2b, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x45, 0x4c, 0x54, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x49, 0x52, 0x10, 0x02, 0x32, 0xaa,
	0x03, 0x0a, 0x02, 0x4b, 0x56, 0x12, 0x34, 0x0a, 0x05, 0x47, 0x65, 0x74, 0x4b, 0x56, 0x12, 0x13,
	0x2e, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x2e, 0x64, 0x62, 0x2e, 0x67, 0x65, 0x74, 0x4b, 0x56,
	0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x2e, 0x64, 0x62, 0x2e,
	0x67, 0x65, 0x74, 0x4b, 0x56, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x06, 0x47,
	0x65, 0x74, 0x4b, 0x56, 0x73, 0x12, 0x14, 0x2e, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x2e, 0x64,
	0x62, 0x2e, 0x67, 0x65, 0x74, 0x4b, 0x56, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x63, 0x61,
	0x73, 0x73, 0x65, 0x6d, 0x2e, 0x64, 0x62, 0x2e, 0x67, 0x65, 0x74, 0x4b, 0x56, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x05, 0x53, 0x65, 0x74, 0x4b, 0x56, 0x12, 0x13, 0x2e,
	0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x2e, 0x64, 0x62, 0x2e, 0x73, 0x65, 0x74, 0x4b, 0x56, 0x52,
	0x65, 0x71, 0x1a, 0x10, 0x2e, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x2e, 0x64, 0x62, 0x2e, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x07, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x4b,
	0x56, 0x12, 0x15, 0x2e, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x2e, 0x64, 0x62, 0x2e, 0x75, 0x6e,
	0x73, 0x65, 0x74, 0x4b, 0x56, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x63, 0x61, 0x73, 0x73, 0x65,
	0x6d, 0x2e, 0x64, 0x62, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x05,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x12, 0x13, 0x2e, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x2e, 0x64,
	0x62, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x63, 0x61, 0x73,
	0x73, 0x65, 0x6d, 0x2e, 0x64, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x00, 0x30,
	0x01, 0x12, 0x2e, 0x0a, 0x03, 0x54, 0x54, 0x4c, 0x12, 0x11, 0x2e, 0x63, 0x61, 0x73, 0x73, 0x65,
	0x6d, 0x2e, 0x64, 0x62, 0x2e, 0x74, 0x74, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x63, 0x61,
	0x73, 0x73, 0x65, 0x6d, 0x2e, 0x64, 0x62, 0x2e, 0x74, 0x74, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x32, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x14, 0x2e, 0x63, 0x61,
	0x73, 0x73, 0x65, 0x6d, 0x2e, 0x64, 0x62, 0x2e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x10, 0x2e, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x2e, 0x64, 0x62, 0x2e, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x05, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x13,
	0x2e, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x2e, 0x64, 0x62, 0x2e, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x2e, 0x64, 0x62, 0x2e,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x34, 0x5a, 0x32, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x65, 0x71, 0x6f, 0x77, 0x6e,
	0x2f, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2f, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x64, 0x62, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x61, 0x70,
	0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cassemdb_api_proto_rawDescOnce sync.Once
	file_cassemdb_api_proto_rawDescData = file_cassemdb_api_proto_rawDesc
)

func file_cassemdb_api_proto_rawDescGZIP() []byte {
	file_cassemdb_api_proto_rawDescOnce.Do(func() {
		file_cassemdb_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_cassemdb_api_proto_rawDescData)
	})
	return file_cassemdb_api_proto_rawDescData
}

var file_cassemdb_api_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_cassemdb_api_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_cassemdb_api_proto_goTypes = []interface{}{
	(EntityType)(0),               // 0: cassem.db.EntityType
	(Change_Op)(0),                // 1: cassem.db.Change.Op
	(*Entity)(nil),                // 2: cassem.db.Entity
	(*Change)(nil),                // 3: cassem.db.Change
	(*ParentDirectoryChange)(nil), // 4: cassem.db.ParentDirectoryChange
	(*Empty)(nil),                 // 5: cassem.db.empty
	(*GetKVReq)(nil),              // 6: cassem.db.getKVReq
	(*GetKVResp)(nil),             // 7: cassem.db.getKVResp
	(*GetKVsReq)(nil),             // 8: cassem.db.getKVsReq
	(*GetKVsResp)(nil),            // 9: cassem.db.getKVsResp
	(*SetKVReq)(nil),              // 10: cassem.db.setKVReq
	(*UnsetKVReq)(nil),            // 11: cassem.db.unsetKVReq
	(*WatchReq)(nil),              // 12: cassem.db.watchReq
	(*TtlReq)(nil),                // 13: cassem.db.ttlReq
	(*TtlResp)(nil),               // 14: cassem.db.ttlResp
	(*ExpireReq)(nil),             // 15: cassem.db.expireReq
	(*RangeReq)(nil),              // 16: cassem.db.rangeReq
	(*RangeResp)(nil),             // 17: cassem.db.rangeResp
}
var file_cassemdb_api_proto_depIdxs = []int32{
	0,  // 0: cassem.db.Entity.typ:type_name -> cassem.db.EntityType
	1,  // 1: cassem.db.Change.op:type_name -> cassem.db.Change.Op
	2,  // 2: cassem.db.Change.last:type_name -> cassem.db.Entity
	2,  // 3: cassem.db.Change.current:type_name -> cassem.db.Entity
	3,  // 4: cassem.db.ParentDirectoryChange.change:type_name -> cassem.db.Change
	2,  // 5: cassem.db.getKVResp.entity:type_name -> cassem.db.Entity
	2,  // 6: cassem.db.getKVsResp.entities:type_name -> cassem.db.Entity
	2,  // 7: cassem.db.rangeResp.entities:type_name -> cassem.db.Entity
	6,  // 8: cassem.db.KV.GetKV:input_type -> cassem.db.getKVReq
	8,  // 9: cassem.db.KV.GetKVs:input_type -> cassem.db.getKVsReq
	10, // 10: cassem.db.KV.SetKV:input_type -> cassem.db.setKVReq
	11, // 11: cassem.db.KV.UnsetKV:input_type -> cassem.db.unsetKVReq
	12, // 12: cassem.db.KV.Watch:input_type -> cassem.db.watchReq
	13, // 13: cassem.db.KV.TTL:input_type -> cassem.db.ttlReq
	15, // 14: cassem.db.KV.Expire:input_type -> cassem.db.expireReq
	16, // 15: cassem.db.KV.Range:input_type -> cassem.db.rangeReq
	7,  // 16: cassem.db.KV.GetKV:output_type -> cassem.db.getKVResp
	9,  // 17: cassem.db.KV.GetKVs:output_type -> cassem.db.getKVsResp
	5,  // 18: cassem.db.KV.SetKV:output_type -> cassem.db.empty
	5,  // 19: cassem.db.KV.UnsetKV:output_type -> cassem.db.empty
	3,  // 20: cassem.db.KV.Watch:output_type -> cassem.db.Change
	14, // 21: cassem.db.KV.TTL:output_type -> cassem.db.ttlResp
	5,  // 22: cassem.db.KV.Expire:output_type -> cassem.db.empty
	17, // 23: cassem.db.KV.Range:output_type -> cassem.db.rangeResp
	16, // [16:24] is the sub-list for method output_type
	8,  // [8:16] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_cassemdb_api_proto_init() }
func file_cassemdb_api_proto_init() {
	if File_cassemdb_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cassemdb_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cassemdb_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Change); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cassemdb_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParentDirectoryChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cassemdb_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cassemdb_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKVReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cassemdb_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKVResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cassemdb_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKVsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cassemdb_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKVsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cassemdb_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetKVReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cassemdb_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsetKVReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cassemdb_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cassemdb_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TtlReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cassemdb_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TtlResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cassemdb_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpireReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cassemdb_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RangeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cassemdb_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RangeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cassemdb_api_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cassemdb_api_proto_goTypes,
		DependencyIndexes: file_cassemdb_api_proto_depIdxs,
		EnumInfos:         file_cassemdb_api_proto_enumTypes,
		MessageInfos:      file_cassemdb_api_proto_msgTypes,
	}.Build()
	File_cassemdb_api_proto = out.File
	file_cassemdb_api_proto_rawDesc = nil
	file_cassemdb_api_proto_goTypes = nil
	file_cassemdb_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// KVClient is the client API for KV service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KVClient interface {
	GetKV(ctx context.Context, in *GetKVReq, opts ...grpc.CallOption) (*GetKVResp, error)
	GetKVs(ctx context.Context, in *GetKVsReq, opts ...grpc.CallOption) (*GetKVsResp, error)
	SetKV(ctx context.Context, in *SetKVReq, opts ...grpc.CallOption) (*Empty, error)
	UnsetKV(ctx context.Context, in *UnsetKVReq, opts ...grpc.CallOption) (*Empty, error)
	// Watch will rev a stream response in client.
	Watch(ctx context.Context, in *WatchReq, opts ...grpc.CallOption) (KV_WatchClient, error)
	TTL(ctx context.Context, in *TtlReq, opts ...grpc.CallOption) (*TtlResp, error)
	Expire(ctx context.Context, in *ExpireReq, opts ...grpc.CallOption) (*Empty, error)
	Range(ctx context.Context, in *RangeReq, opts ...grpc.CallOption) (*RangeResp, error)
}

type kVClient struct {
	cc grpc.ClientConnInterface
}

func NewKVClient(cc grpc.ClientConnInterface) KVClient {
	return &kVClient{cc}
}

func (c *kVClient) GetKV(ctx context.Context, in *GetKVReq, opts ...grpc.CallOption) (*GetKVResp, error) {
	out := new(GetKVResp)
	err := c.cc.Invoke(ctx, "/cassem.db.KV/GetKV", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVClient) GetKVs(ctx context.Context, in *GetKVsReq, opts ...grpc.CallOption) (*GetKVsResp, error) {
	out := new(GetKVsResp)
	err := c.cc.Invoke(ctx, "/cassem.db.KV/GetKVs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVClient) SetKV(ctx context.Context, in *SetKVReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/cassem.db.KV/SetKV", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVClient) UnsetKV(ctx context.Context, in *UnsetKVReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/cassem.db.KV/UnsetKV", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVClient) Watch(ctx context.Context, in *WatchReq, opts ...grpc.CallOption) (KV_WatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_KV_serviceDesc.Streams[0], "/cassem.db.KV/Watch", opts...)
	if err != nil {
		return nil, err
	}
	x := &kVWatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type KV_WatchClient interface {
	Recv() (*Change, error)
	grpc.ClientStream
}

type kVWatchClient struct {
	grpc.ClientStream
}

func (x *kVWatchClient) Recv() (*Change, error) {
	m := new(Change)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *kVClient) TTL(ctx context.Context, in *TtlReq, opts ...grpc.CallOption) (*TtlResp, error) {
	out := new(TtlResp)
	err := c.cc.Invoke(ctx, "/cassem.db.KV/TTL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVClient) Expire(ctx context.Context, in *ExpireReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/cassem.db.KV/Expire", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVClient) Range(ctx context.Context, in *RangeReq, opts ...grpc.CallOption) (*RangeResp, error) {
	out := new(RangeResp)
	err := c.cc.Invoke(ctx, "/cassem.db.KV/Range", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KVServer is the server API for KV service.
type KVServer interface {
	GetKV(context.Context, *GetKVReq) (*GetKVResp, error)
	GetKVs(context.Context, *GetKVsReq) (*GetKVsResp, error)
	SetKV(context.Context, *SetKVReq) (*Empty, error)
	UnsetKV(context.Context, *UnsetKVReq) (*Empty, error)
	// Watch will rev a stream response in client.
	Watch(*WatchReq, KV_WatchServer) error
	TTL(context.Context, *TtlReq) (*TtlResp, error)
	Expire(context.Context, *ExpireReq) (*Empty, error)
	Range(context.Context, *RangeReq) (*RangeResp, error)
}

// UnimplementedKVServer can be embedded to have forward compatible implementations.
type UnimplementedKVServer struct {
}

func (*UnimplementedKVServer) GetKV(context.Context, *GetKVReq) (*GetKVResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetKV not implemented")
}
func (*UnimplementedKVServer) GetKVs(context.Context, *GetKVsReq) (*GetKVsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetKVs not implemented")
}
func (*UnimplementedKVServer) SetKV(context.Context, *SetKVReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetKV not implemented")
}
func (*UnimplementedKVServer) UnsetKV(context.Context, *UnsetKVReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnsetKV not implemented")
}
func (*UnimplementedKVServer) Watch(*WatchReq, KV_WatchServer) error {
	return status.Errorf(codes.Unimplemented, "method Watch not implemented")
}
func (*UnimplementedKVServer) TTL(context.Context, *TtlReq) (*TtlResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TTL not implemented")
}
func (*UnimplementedKVServer) Expire(context.Context, *ExpireReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Expire not implemented")
}
func (*UnimplementedKVServer) Range(context.Context, *RangeReq) (*RangeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Range not implemented")
}

func RegisterKVServer(s *grpc.Server, srv KVServer) {
	s.RegisterService(&_KV_serviceDesc, srv)
}

func _KV_GetKV_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetKVReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServer).GetKV(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cassem.db.KV/GetKV",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServer).GetKV(ctx, req.(*GetKVReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _KV_GetKVs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetKVsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServer).GetKVs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cassem.db.KV/GetKVs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServer).GetKVs(ctx, req.(*GetKVsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _KV_SetKV_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetKVReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServer).SetKV(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cassem.db.KV/SetKV",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServer).SetKV(ctx, req.(*SetKVReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _KV_UnsetKV_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsetKVReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServer).UnsetKV(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cassem.db.KV/UnsetKV",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServer).UnsetKV(ctx, req.(*UnsetKVReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _KV_Watch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(KVServer).Watch(m, &kVWatchServer{stream})
}

type KV_WatchServer interface {
	Send(*Change) error
	grpc.ServerStream
}

type kVWatchServer struct {
	grpc.ServerStream
}

func (x *kVWatchServer) Send(m *Change) error {
	return x.ServerStream.SendMsg(m)
}

func _KV_TTL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TtlReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServer).TTL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cassem.db.KV/TTL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServer).TTL(ctx, req.(*TtlReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _KV_Expire_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExpireReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServer).Expire(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cassem.db.KV/Expire",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServer).Expire(ctx, req.(*ExpireReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _KV_Range_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RangeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServer).Range(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cassem.db.KV/Range",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServer).Range(ctx, req.(*RangeReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _KV_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cassem.db.KV",
	HandlerType: (*KVServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetKV",
			Handler:    _KV_GetKV_Handler,
		},
		{
			MethodName: "GetKVs",
			Handler:    _KV_GetKVs_Handler,
		},
		{
			MethodName: "SetKV",
			Handler:    _KV_SetKV_Handler,
		},
		{
			MethodName: "UnsetKV",
			Handler:    _KV_UnsetKV_Handler,
		},
		{
			MethodName: "TTL",
			Handler:    _KV_TTL_Handler,
		},
		{
			MethodName: "Expire",
			Handler:    _KV_Expire_Handler,
		},
		{
			MethodName: "Range",
			Handler:    _KV_Range_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Watch",
			Handler:       _KV_Watch_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "cassemdb.api.proto",
}
