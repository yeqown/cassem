syntax = "proto3";

package cassem.db;
option go_package = "api";

enum EntityType {
  UNKNOWN = 0;
  ELT     = 1; // element
  DIR     = 2; // directory
}

message Entity {
  string     fingerprint = 1;
  string     key         = 2;
  bytes      val         = 3;
  int64      created_at  = 4;
  int64      updated_at  = 5;
  int32      ttl         = 6;
  EntityType typ         = 7;
};

message change {
  enum ChangeOp {
    Invalid = 0;
    Set     = 1;
    Unset   = 2;
  }

  ChangeOp op      = 1;
  string   key     = 2;
  Entity   last    = 3;
  Entity   current = 4;
};

message empty {};

message getKVReq {
  string key = 1;
};

message getKVResp {
  Entity entity = 1;
};

message getKVsReq {
  repeated string keys = 1;
};

message getKVsResp {
  repeated Entity entities = 1;
};


message setKVReq {
  string key       = 1;
  bool   is_dir    = 2;
  uint32 ttl       = 3; // ttl is Time to Live (n seconds)
  bytes  val       = 4;
  bool   overwrite = 5;
};

message unsetKVReq {
  string key    = 1;
  bool   is_dir = 2;
};

message watchReq {
  repeated string keys = 2;
};

message ttlReq {
  string key = 1;
};

message ttlResp {
  int32 ttl = 1;
}

message expireReq {
  string key = 1;
};

message rangeReq {
  string key   = 1;
  string seek  = 2;
  int32  limit = 3;
};

message rangeResp {
  repeated Entity entities      = 1;
  bool            has_more      = 2;
  string          next_seek_key = 3;
}

service KV {
  rpc GetKV(getKVReq) returns(getKVResp) {};
  rpc GetKVs(getKVsReq) returns(getKVsResp) {};
  rpc SetKV(setKVReq) returns(empty) {};
  rpc UnsetKV(unsetKVReq) returns(empty) {};

  // Watch will rev a stream response in client.
  rpc Watch(watchReq) returns (stream change) {};

  rpc TTL(ttlReq) returns (ttlResp) {};
  rpc Expire(expireReq) returns (empty) {};
  rpc Range(rangeReq) returns (rangeResp) {};
}