// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: cassemagent.api.proto

package agent

import (
	context "context"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	concept "github.com/yeqown/cassem/api/concept"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetElementReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App  string   `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Env  string   `protobuf:"bytes,2,opt,name=env,proto3" json:"env,omitempty"`
	Keys []string `protobuf:"bytes,3,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *GetElementReq) Reset() {
	*x = GetElementReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cassemagent_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetElementReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetElementReq) ProtoMessage() {}

func (x *GetElementReq) ProtoReflect() protoreflect.Message {
	mi := &file_cassemagent_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetElementReq.ProtoReflect.Descriptor instead.
func (*GetElementReq) Descriptor() ([]byte, []int) {
	return file_cassemagent_api_proto_rawDescGZIP(), []int{0}
}

func (x *GetElementReq) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *GetElementReq) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *GetElementReq) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type GetElementResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elems []*concept.Element `protobuf:"bytes,1,rep,name=elems,proto3" json:"elems,omitempty"`
}

func (x *GetElementResp) Reset() {
	*x = GetElementResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cassemagent_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetElementResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetElementResp) ProtoMessage() {}

func (x *GetElementResp) ProtoReflect() protoreflect.Message {
	mi := &file_cassemagent_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetElementResp.ProtoReflect.Descriptor instead.
func (*GetElementResp) Descriptor() ([]byte, []int) {
	return file_cassemagent_api_proto_rawDescGZIP(), []int{1}
}

func (x *GetElementResp) GetElems() []*concept.Element {
	if x != nil {
		return x.Elems
	}
	return nil
}

type UnregisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	ClientIp string `protobuf:"bytes,2,opt,name=clientIp,proto3" json:"clientIp,omitempty"`
}

func (x *UnregisterReq) Reset() {
	*x = UnregisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cassemagent_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterReq) ProtoMessage() {}

func (x *UnregisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_cassemagent_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterReq.ProtoReflect.Descriptor instead.
func (*UnregisterReq) Descriptor() ([]byte, []int) {
	return file_cassemagent_api_proto_rawDescGZIP(), []int{2}
}

func (x *UnregisterReq) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UnregisterReq) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

type RegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string                       `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	ClientIp string                       `protobuf:"bytes,2,opt,name=clientIp,proto3" json:"clientIp,omitempty"`
	Watching []*concept.Instance_Watching `protobuf:"bytes,3,rep,name=watching,proto3" json:"watching,omitempty"`
}

func (x *RegisterReq) Reset() {
	*x = RegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cassemagent_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReq) ProtoMessage() {}

func (x *RegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_cassemagent_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReq.ProtoReflect.Descriptor instead.
func (*RegisterReq) Descriptor() ([]byte, []int) {
	return file_cassemagent_api_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterReq) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *RegisterReq) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *RegisterReq) GetWatching() []*concept.Instance_Watching {
	if x != nil {
		return x.Watching
	}
	return nil
}

type EmptyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyResp) Reset() {
	*x = EmptyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cassemagent_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResp) ProtoMessage() {}

func (x *EmptyResp) ProtoReflect() protoreflect.Message {
	mi := &file_cassemagent_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResp.ProtoReflect.Descriptor instead.
func (*EmptyResp) Descriptor() ([]byte, []int) {
	return file_cassemagent_api_proto_rawDescGZIP(), []int{4}
}

type WatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Watching []*concept.Instance_Watching `protobuf:"bytes,1,rep,name=watching,proto3" json:"watching,omitempty"`
	//  string app = 1 [(validate.rules).string = {min_len: 3, max_len: 30}];
	//  string env = 2 [(validate.rules).string = {min_len: 3, max_len: 30}];
	//  repeated string watchingKeys = 3 [(validate.rules).repeated = {unique: true, min_items: 1, max_items: 100}];
	ClientId string `protobuf:"bytes,4,opt,name=clientId,proto3" json:"clientId,omitempty"`
	ClientIp string `protobuf:"bytes,5,opt,name=clientIp,proto3" json:"clientIp,omitempty"`
}

func (x *WatchReq) Reset() {
	*x = WatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cassemagent_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchReq) ProtoMessage() {}

func (x *WatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_cassemagent_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchReq.ProtoReflect.Descriptor instead.
func (*WatchReq) Descriptor() ([]byte, []int) {
	return file_cassemagent_api_proto_rawDescGZIP(), []int{5}
}

func (x *WatchReq) GetWatching() []*concept.Instance_Watching {
	if x != nil {
		return x.Watching
	}
	return nil
}

func (x *WatchReq) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *WatchReq) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

type WatchResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elem *concept.Element `protobuf:"bytes,1,opt,name=elem,proto3" json:"elem,omitempty"`
}

func (x *WatchResp) Reset() {
	*x = WatchResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cassemagent_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchResp) ProtoMessage() {}

func (x *WatchResp) ProtoReflect() protoreflect.Message {
	mi := &file_cassemagent_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchResp.ProtoReflect.Descriptor instead.
func (*WatchResp) Descriptor() ([]byte, []int) {
	return file_cassemagent_api_proto_rawDescGZIP(), []int{6}
}

func (x *WatchResp) GetElem() *concept.Element {
	if x != nil {
		return x.Elem
	}
	return nil
}

type DispatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elems []*concept.Element `protobuf:"bytes,1,rep,name=elems,proto3" json:"elems,omitempty"`
}

func (x *DispatchReq) Reset() {
	*x = DispatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cassemagent_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DispatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DispatchReq) ProtoMessage() {}

func (x *DispatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_cassemagent_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DispatchReq.ProtoReflect.Descriptor instead.
func (*DispatchReq) Descriptor() ([]byte, []int) {
	return file_cassemagent_api_proto_rawDescGZIP(), []int{7}
}

func (x *DispatchReq) GetElems() []*concept.Element {
	if x != nil {
		return x.Elems
	}
	return nil
}

type DispatchResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DispatchResp) Reset() {
	*x = DispatchResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cassemagent_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DispatchResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DispatchResp) ProtoMessage() {}

func (x *DispatchResp) ProtoReflect() protoreflect.Message {
	mi := &file_cassemagent_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DispatchResp.ProtoReflect.Descriptor instead.
func (*DispatchResp) Descriptor() ([]byte, []int) {
	return file_cassemagent_api_proto_rawDescGZIP(), []int{8}
}

var File_cassemagent_api_proto protoreflect.FileDescriptor

var file_cassemagent_api_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x1a, 0x13, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x65, 0x6e, 0x76, 0x6f,
	0x79, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6b,
	0x0a, 0x0d, 0x67, 0x65, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1b, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42,
	0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x1e, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x1b, 0x0a, 0x03,
	0x65, 0x6e, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04,
	0x10, 0x03, 0x18, 0x1e, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x20, 0x0a, 0x04, 0x6b, 0x65, 0x79,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x08,
	0x01, 0x10, 0x64, 0x18, 0x01, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x3f, 0x0a, 0x0e, 0x67,
	0x65, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a,
	0x05, 0x65, 0x6c, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63,
	0x61, 0x73, 0x73, 0x65, 0x6d, 0x2e, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x2e, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x6c, 0x65, 0x6d, 0x73, 0x22, 0x5b, 0x0a, 0x0d,
	0x75, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x05, 0x18, 0x40, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x70, 0x01, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x22, 0xa2, 0x01, 0x0a, 0x0b, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06,
	0x72, 0x04, 0x10, 0x05, 0x18, 0x40, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x70, 0x01, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x47, 0x0a, 0x08, 0x77, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d,
	0x2e, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92,
	0x01, 0x02, 0x28, 0x01, 0x52, 0x08, 0x77, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x22, 0x0b,
	0x0a, 0x09, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x9f, 0x01, 0x0a, 0x08,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x47, 0x0a, 0x08, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x61, 0x73,
	0x73, 0x65, 0x6d, 0x2e, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x92, 0x01, 0x02, 0x28, 0x01, 0x52, 0x08, 0x77, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x12, 0x25, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x05, 0x18, 0x40, 0x52, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x70, 0x01, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x22, 0x38, 0x0a,
	0x09, 0x77, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x04, 0x65, 0x6c,
	0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x61, 0x73, 0x73, 0x65,
	0x6d, 0x2e, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x04, 0x65, 0x6c, 0x65, 0x6d, 0x22, 0x3c, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x2d, 0x0a, 0x05, 0x65, 0x6c, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x2e, 0x63,
	0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05,
	0x65, 0x6c, 0x65, 0x6d, 0x73, 0x22, 0x0e, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x32, 0xd7, 0x02, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12,
	0x49, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x2e,
	0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x67, 0x65, 0x74,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x63, 0x61, 0x73,
	0x73, 0x65, 0x6d, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x67, 0x65, 0x74, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0a, 0x55, 0x6e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x63, 0x61, 0x73, 0x73, 0x65,
	0x6d, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x75, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x40, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x63,
	0x61, 0x73, 0x73, 0x65, 0x6d, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x3d, 0x0a, 0x05, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x12, 0x19, 0x2e, 0x63, 0x61,
	0x73, 0x73, 0x65, 0x6d, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x3c, 0x0a, 0x05, 0x57, 0x61, 0x74, 0x63, 0x68, 0x12, 0x16, 0x2e, 0x63, 0x61, 0x73,
	0x73, 0x65, 0x6d, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x1a, 0x17, 0x2e, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x30, 0x01, 0x32,
	0x4f, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x43, 0x0a, 0x08, 0x44,
	0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x19, 0x2e, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79,
	0x65, 0x71, 0x6f, 0x77, 0x6e, 0x2f, 0x63, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x3b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cassemagent_api_proto_rawDescOnce sync.Once
	file_cassemagent_api_proto_rawDescData = file_cassemagent_api_proto_rawDesc
)

func file_cassemagent_api_proto_rawDescGZIP() []byte {
	file_cassemagent_api_proto_rawDescOnce.Do(func() {
		file_cassemagent_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_cassemagent_api_proto_rawDescData)
	})
	return file_cassemagent_api_proto_rawDescData
}

var file_cassemagent_api_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_cassemagent_api_proto_goTypes = []interface{}{
	(*GetElementReq)(nil),             // 0: cassem.agent.getElementReq
	(*GetElementResp)(nil),            // 1: cassem.agent.getElementResp
	(*UnregisterReq)(nil),             // 2: cassem.agent.unregisterReq
	(*RegisterReq)(nil),               // 3: cassem.agent.registerReq
	(*EmptyResp)(nil),                 // 4: cassem.agent.emptyResp
	(*WatchReq)(nil),                  // 5: cassem.agent.watchReq
	(*WatchResp)(nil),                 // 6: cassem.agent.watchResp
	(*DispatchReq)(nil),               // 7: cassem.agent.dispatchReq
	(*DispatchResp)(nil),              // 8: cassem.agent.dispatchResp
	(*concept.Element)(nil),           // 9: cassem.concept.Element
	(*concept.Instance_Watching)(nil), // 10: cassem.concept.Instance.Watching
}
var file_cassemagent_api_proto_depIdxs = []int32{
	9,  // 0: cassem.agent.getElementResp.elems:type_name -> cassem.concept.Element
	10, // 1: cassem.agent.registerReq.watching:type_name -> cassem.concept.Instance.Watching
	10, // 2: cassem.agent.watchReq.watching:type_name -> cassem.concept.Instance.Watching
	9,  // 3: cassem.agent.watchResp.elem:type_name -> cassem.concept.Element
	9,  // 4: cassem.agent.dispatchReq.elems:type_name -> cassem.concept.Element
	0,  // 5: cassem.agent.agent.GetElement:input_type -> cassem.agent.getElementReq
	2,  // 6: cassem.agent.agent.Unregister:input_type -> cassem.agent.unregisterReq
	3,  // 7: cassem.agent.agent.Register:input_type -> cassem.agent.registerReq
	3,  // 8: cassem.agent.agent.Renew:input_type -> cassem.agent.registerReq
	5,  // 9: cassem.agent.agent.Watch:input_type -> cassem.agent.watchReq
	7,  // 10: cassem.agent.delivery.Dispatch:input_type -> cassem.agent.dispatchReq
	1,  // 11: cassem.agent.agent.GetElement:output_type -> cassem.agent.getElementResp
	4,  // 12: cassem.agent.agent.Unregister:output_type -> cassem.agent.emptyResp
	4,  // 13: cassem.agent.agent.Register:output_type -> cassem.agent.emptyResp
	4,  // 14: cassem.agent.agent.Renew:output_type -> cassem.agent.emptyResp
	6,  // 15: cassem.agent.agent.Watch:output_type -> cassem.agent.watchResp
	8,  // 16: cassem.agent.delivery.Dispatch:output_type -> cassem.agent.dispatchResp
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_cassemagent_api_proto_init() }
func file_cassemagent_api_proto_init() {
	if File_cassemagent_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cassemagent_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetElementReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cassemagent_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetElementResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cassemagent_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cassemagent_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cassemagent_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cassemagent_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cassemagent_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cassemagent_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DispatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cassemagent_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DispatchResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cassemagent_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_cassemagent_api_proto_goTypes,
		DependencyIndexes: file_cassemagent_api_proto_depIdxs,
		MessageInfos:      file_cassemagent_api_proto_msgTypes,
	}.Build()
	File_cassemagent_api_proto = out.File
	file_cassemagent_api_proto_rawDesc = nil
	file_cassemagent_api_proto_goTypes = nil
	file_cassemagent_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AgentClient is the client API for Agent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AgentClient interface {
	GetElement(ctx context.Context, in *GetElementReq, opts ...grpc.CallOption) (*GetElementResp, error)
	Unregister(ctx context.Context, in *UnregisterReq, opts ...grpc.CallOption) (*EmptyResp, error)
	Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*EmptyResp, error)
	Renew(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*EmptyResp, error)
	Watch(ctx context.Context, in *WatchReq, opts ...grpc.CallOption) (Agent_WatchClient, error)
}

type agentClient struct {
	cc grpc.ClientConnInterface
}

func NewAgentClient(cc grpc.ClientConnInterface) AgentClient {
	return &agentClient{cc}
}

func (c *agentClient) GetElement(ctx context.Context, in *GetElementReq, opts ...grpc.CallOption) (*GetElementResp, error) {
	out := new(GetElementResp)
	err := c.cc.Invoke(ctx, "/cassem.agent.agent/GetElement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Unregister(ctx context.Context, in *UnregisterReq, opts ...grpc.CallOption) (*EmptyResp, error) {
	out := new(EmptyResp)
	err := c.cc.Invoke(ctx, "/cassem.agent.agent/Unregister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*EmptyResp, error) {
	out := new(EmptyResp)
	err := c.cc.Invoke(ctx, "/cassem.agent.agent/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Renew(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*EmptyResp, error) {
	out := new(EmptyResp)
	err := c.cc.Invoke(ctx, "/cassem.agent.agent/Renew", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Watch(ctx context.Context, in *WatchReq, opts ...grpc.CallOption) (Agent_WatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Agent_serviceDesc.Streams[0], "/cassem.agent.agent/Watch", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentWatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Agent_WatchClient interface {
	Recv() (*WatchResp, error)
	grpc.ClientStream
}

type agentWatchClient struct {
	grpc.ClientStream
}

func (x *agentWatchClient) Recv() (*WatchResp, error) {
	m := new(WatchResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AgentServer is the server API for Agent service.
type AgentServer interface {
	GetElement(context.Context, *GetElementReq) (*GetElementResp, error)
	Unregister(context.Context, *UnregisterReq) (*EmptyResp, error)
	Register(context.Context, *RegisterReq) (*EmptyResp, error)
	Renew(context.Context, *RegisterReq) (*EmptyResp, error)
	Watch(*WatchReq, Agent_WatchServer) error
}

// UnimplementedAgentServer can be embedded to have forward compatible implementations.
type UnimplementedAgentServer struct {
}

func (*UnimplementedAgentServer) GetElement(context.Context, *GetElementReq) (*GetElementResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetElement not implemented")
}
func (*UnimplementedAgentServer) Unregister(context.Context, *UnregisterReq) (*EmptyResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unregister not implemented")
}
func (*UnimplementedAgentServer) Register(context.Context, *RegisterReq) (*EmptyResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedAgentServer) Renew(context.Context, *RegisterReq) (*EmptyResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Renew not implemented")
}
func (*UnimplementedAgentServer) Watch(*WatchReq, Agent_WatchServer) error {
	return status.Errorf(codes.Unimplemented, "method Watch not implemented")
}

func RegisterAgentServer(s *grpc.Server, srv AgentServer) {
	s.RegisterService(&_Agent_serviceDesc, srv)
}

func _Agent_GetElement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetElementReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).GetElement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cassem.agent.agent/GetElement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).GetElement(ctx, req.(*GetElementReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Unregister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnregisterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Unregister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cassem.agent.agent/Unregister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Unregister(ctx, req.(*UnregisterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cassem.agent.agent/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Register(ctx, req.(*RegisterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Renew_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Renew(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cassem.agent.agent/Renew",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Renew(ctx, req.(*RegisterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Watch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AgentServer).Watch(m, &agentWatchServer{stream})
}

type Agent_WatchServer interface {
	Send(*WatchResp) error
	grpc.ServerStream
}

type agentWatchServer struct {
	grpc.ServerStream
}

func (x *agentWatchServer) Send(m *WatchResp) error {
	return x.ServerStream.SendMsg(m)
}

var _Agent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cassem.agent.agent",
	HandlerType: (*AgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetElement",
			Handler:    _Agent_GetElement_Handler,
		},
		{
			MethodName: "Unregister",
			Handler:    _Agent_Unregister_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _Agent_Register_Handler,
		},
		{
			MethodName: "Renew",
			Handler:    _Agent_Renew_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Watch",
			Handler:       _Agent_Watch_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "cassemagent.api.proto",
}

// DeliveryClient is the client API for Delivery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeliveryClient interface {
	Dispatch(ctx context.Context, in *DispatchReq, opts ...grpc.CallOption) (*DispatchResp, error)
}

type deliveryClient struct {
	cc grpc.ClientConnInterface
}

func NewDeliveryClient(cc grpc.ClientConnInterface) DeliveryClient {
	return &deliveryClient{cc}
}

func (c *deliveryClient) Dispatch(ctx context.Context, in *DispatchReq, opts ...grpc.CallOption) (*DispatchResp, error) {
	out := new(DispatchResp)
	err := c.cc.Invoke(ctx, "/cassem.agent.delivery/Dispatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeliveryServer is the server API for Delivery service.
type DeliveryServer interface {
	Dispatch(context.Context, *DispatchReq) (*DispatchResp, error)
}

// UnimplementedDeliveryServer can be embedded to have forward compatible implementations.
type UnimplementedDeliveryServer struct {
}

func (*UnimplementedDeliveryServer) Dispatch(context.Context, *DispatchReq) (*DispatchResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Dispatch not implemented")
}

func RegisterDeliveryServer(s *grpc.Server, srv DeliveryServer) {
	s.RegisterService(&_Delivery_serviceDesc, srv)
}

func _Delivery_Dispatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DispatchReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeliveryServer).Dispatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cassem.agent.delivery/Dispatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeliveryServer).Dispatch(ctx, req.(*DispatchReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Delivery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cassem.agent.delivery",
	HandlerType: (*DeliveryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Dispatch",
			Handler:    _Delivery_Dispatch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cassemagent.api.proto",
}
